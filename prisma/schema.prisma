// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Polls {
    id          Int             @id @default(autoincrement())
    title       String
    slug        String          @unique
    description String?

    options     PollOptions[]
    votes       PollVotes[]      
}

model PollOptions {
    id          Int     @id @default(autoincrement())
    name        String

    poll        Polls   @relation(fields: [pollId], references: [id])
    pollId      Int

    votes       PollVotes[]
}

model PollVotes {
    id          Int             @id @default(autoincrement())
    fingerprint String

    poll        Polls           @relation(fields: [pollId], references: [id])
    pollId      Int
    
    option      PollOptions     @relation(fields: [optionId], references: [id])
    optionId    Int
}

model TtsAudioFiles {
    id          Int             @id @default(autoincrement())
    rewardName  String
    userName    String
    input       String
    filePath    String

    TtsQueue TtsQueue[]
}

model TtsQueue {
    id          Int             @id @default(autoincrement())
    ttsFile     TtsAudioFiles   @relation(fields: [ttsFileId], references: [id], onDelete: Cascade)
    ttsFileId   Int
}

model Tourneys {
    id          Int             @id @default(autoincrement())
    name        String          @unique
    slug        String          @unique
    description String?
    startDate   DateTime
    teams       TourneyTeams[]
}

model TourneyTeams {
    id          String          @id @unique @default(cuid())
    name        String          @unique
    players     TourneyPlayers[]

    tourney     Tourneys        @relation(fields: [tourneyId], references: [id])
    tourneyId   Int
}

model TourneyPlayers {
    id          Int             @id @default(autoincrement())
    player      String          @default("{}")    // A JSON string

    team        TourneyTeams    @relation(fields: [teamId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    teamId      String
}